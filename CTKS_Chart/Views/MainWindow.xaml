<Window x:Class="CTKS_Chart.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:VCore.WPF.Controls;assembly=VCore.WPF"
        xmlns:converters="clr-namespace:VCore.WPF.Converters;assembly=VCore.WPF"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:logger="clr-namespace:Logger;assembly=Logger"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="MainWindow"
        Width="1370"
        Height="1100"
        Background="{StaticResource BackgroudBrush}"
        FontFamily="pack://application:,,,/VCore.WPF;component/Resources/Fonts/Roboto/#Roboto"
        Style="{StaticResource {x:Type Window}}"
        WindowStartupLocation="CenterScreen"
        mc:Ignorable="d">

    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="Canvas">
                <Setter Property="ClipToBounds" Value="True" />
            </Style>

            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="#ccc" />
            </Style>

            <Style x:Key="PositionText"
                   BasedOn="{StaticResource {x:Type TextBlock}}"
                   TargetType="TextBlock">
                <Setter Property="Margin" Value="0,0,15,0" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Right" />
            </Style>

        </ResourceDictionary>


    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Border Background="{StaticResource BackgroudGradientBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Menu VerticalAlignment="Center" Background="Transparent">
                    <MenuItem Header="Settings">

                        <MenuItem Header="Default">
                            <Border Padding="10">
                                <UniformGrid Columns="1">
                                    <StackPanel Margin="5" Orientation="Horizontal">
                                        <Button Width="120"
                                                Margin="10,0,10,0"
                                                Command="{Binding ShowLines}">
                                            Show lines
                                        </Button>
                                        <Button Width="120"
                                                Margin="10,0,10,0"
                                                Command="{Binding ShowIntersections}">
                                            Show intersections
                                        </Button>

                                        <Button Width="120"
                                                Margin="10,0,10,0"
                                                Command="{Binding ResetBot}">
                                            Reset Bot
                                        </Button>




                                    </StackPanel>

                                    <StackPanel Margin="5" Orientation="Horizontal">
                                        <TextBox Width="80"
                                                 Margin="10,0,10,0"
                                                 Text="{Binding MaxValue}" />
                                        <TextBox Width="80"
                                                 Margin="10,0,10,0"
                                                 Text="{Binding MinValue}" />

                                        <TextBox Width="50"
                                                 Margin="10,0,10,0"
                                                 Text="{Binding CandleCount}" />
                                    </StackPanel>

                                    <StackPanel Margin="5" Orientation="Horizontal">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock VerticalAlignment="Center" Text="Min buy % " />
                                            <TextBox Width="40"
                                                     Margin="10,0,10,0"
                                                     Text="{Binding TradingBot.Strategy.MinBuyPrice}" />

                                        </StackPanel>



                                        <CheckBox Width="120"
                                                  Margin="10,0,10,0"
                                                  IsChecked="{Binding ShowAveragePrice}">
                                            Show Average Price
                                        </CheckBox>


                                        <CheckBox Width="120"
                                                  Margin="10,0,10,0"
                                                  IsChecked="{Binding ShowATH}">
                                            Show All Time High Price
                                        </CheckBox>

                                    </StackPanel>
                                </UniformGrid>
                            </Border>
                        </MenuItem>

                        <MenuItem Header="Color">
                            <Border Padding="10">
                                <Grid>
                                    <ItemsControl ItemsSource="{Binding ColorScheme.ColorSettings}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="10,10">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Margin="5,0,20,0" Text="{Binding Key}" />

                                                    <Grid Grid.Column="1" DataContext="{Binding Value}">
                                                        <controls:PathButton x:Name="color_picker_toggle"
                                                                             Width="20"
                                                                             Height="18"
                                                                             HorizontalAlignment="Right"
                                                                             Background="{Binding Brush}"
                                                                             BorderCheckedColor="{StaticResource DefaultRedColor}"
                                                                             BorderDefaultColor="#454545"
                                                                             BorderHoverColor="{StaticResource DefaultRedColor}"
                                                                             BorderThickness="2"
                                                                             EnableBorderAnimation="True" />

                                                        <Popup IsOpen="{Binding Path=IsChecked, ElementName=color_picker_toggle}" StaysOpen="False">
                                                            <xctk:ColorCanvas Background="#151515"
                                                                              BorderBrush="#45ffffff"
                                                                              BorderThickness="1"
                                                                              SelectedColor="{Binding Brush, Converter={converters:StringToColorConverter}}" />
                                                        </Popup>
                                                    </Grid>

                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                            </Border>
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="Actions">
                        <MenuItem Command="{Binding FetchMissingInfo}" Header="Fetch missing info" />
                    </MenuItem>

                    <MenuItem Command="{Binding OpenStatistics}" Header="Statistics" />
                </Menu>

                <Grid Grid.Column="1" Margin="5">
                    <ItemsControl ItemsSource="{Binding Layouts}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Border>
                                    <Button Command="{Binding DataContext.ShowCanvas, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}">
                                        <TextBlock FontSize="15" Text="{Binding Title}" />

                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border Margin="{TemplateBinding Margin}"
                                                                    Padding="{TemplateBinding Padding}"
                                                                    Background="{TemplateBinding Background}">
                                                                <ContentPresenter />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>

                                                <Setter Property="Background" Value="#15ffffff" />

                                                <Setter Property="Padding" Value="15,5" />
                                                <Setter Property="Margin" Value="2,0" />
                                                <Setter Property="FontWeight" Value="SemiBold" />
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="Foreground" Value="{StaticResource DefaultWhiteBrush}" />

                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsOutDated}" Value="True">
                                                        <Setter Property="Background" Value="#f25e5e" />
                                                    </DataTrigger>

                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#35ffffff" />
                                                    </Trigger>
                                                </Style.Triggers>


                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                </Grid>

            </Grid>

        </Border>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="2*" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" MinHeight="50" />
            </Grid.RowDefinitions>


            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border Background="#ff05080d" MouseWheel="Border_MouseWheel">
                    <ContentControl Content="{Binding MainGrid}" />
                </Border>

                <Border VerticalAlignment="Top">
                    <Grid DataContext="{Binding TradingBot.Strategy}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <Border Padding="5,5,0,5" Background="#6005080d">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Style BasedOn="{StaticResource PositionText}" TargetType="TextBlock">
                                        <Setter Property="Foreground" Value="#55ffffff" />
                                        <Setter Property="Margin" Value="5.25,0" />
                                        <Setter Property="FontSize" Value="13" />
                                    </Style>
                                </StackPanel.Resources>

                                <TextBlock Text="{Binding DataContext.ActiveTime, StringFormat={}{0:dd\\:hh\\:mm\\:ss}, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" ToolTip="Active time" />
                                <TextBlock Foreground="{StaticResource YellowBrush}"
                                           Text="{Binding TotalValue, StringFormat={}{0:N2} $}"
                                           ToolTip="Total value" />

                                <TextBlock Foreground="{StaticResource GreenBrush3}"
                                           Text="{Binding TotalProfit, StringFormat={}{0:N2} $}"
                                           ToolTip="Profit" />

                                <TextBlock Foreground="{StaticResource BlueBrush}"
                                           Text="{Binding Budget, StringFormat={}{0:N2} $}"
                                           ToolTip="Budget" />



                                <TextBlock Foreground="{StaticResource YellowBrush3}"
                                           Text="{Binding TotalNativeAsset}"
                                           ToolTip="Native asset size" />

                                <TextBlock Foreground="{StaticResource MagentaBrush}"
                                           Text="{Binding TotalNativeAssetValue, StringFormat={}{0:N2} $}"
                                           ToolTip="Native asset value $" />

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding TotalActualProfit, StringFormat={}{0:N3} $}" ToolTip="Total Actual Profit">
                                        <TextBlock.Style>
                                            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">

                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding TotalActualProfit, Converter={converters:IsLesserConverter}, ConverterParameter=0}" Value="true">
                                                        <Setter Property="Foreground" Value="{StaticResource DefaultRedBrush}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding TotalActualProfit, Converter={converters:IsGreaterConverter}, ConverterParameter=0}" Value="true">
                                                        <Setter Property="Foreground" Value="{StaticResource GreenBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>

                                <TextBlock FontSize="10"
                                           Text="{Binding AvrageBuyPrice}"
                                           ToolTip="Average buy price" />

                                <TextBlock FontSize="10"
                                           Foreground="{StaticResource YellowBrush3}"
                                           Text="{Binding TotalExpectedProfit, StringFormat={}{0:N2} $}"
                                           ToolTip="Total expected profit" />

                                <TextBlock DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"
                                           FontSize="10"
                                           Text="{Binding DailyChange, StringFormat={}{0:N2} $}"
                                           ToolTip="Daily PnL">
                                    <TextBlock.Style>
                                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding DailyChange, Converter={converters:IsLesserConverter}, ConverterParameter=0}" Value="true">
                                                    <Setter Property="Foreground" Value="{StaticResource DefaultRedBrush}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding DailyChange, Converter={converters:IsGreaterConverter}, ConverterParameter=0}" Value="true">
                                                    <Setter Property="Foreground" Value="{StaticResource GreenBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <TextBlock DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}"
                                           FontSize="10"
                                           Text="{Binding FromAllTimeHigh, StringFormat={}{0:N2} $}"
                                           ToolTip="From All Time High">
                                    <TextBlock.Style>
                                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding FromAllTimeHigh, Converter={converters:IsLesserConverter}, ConverterParameter=0}" Value="true">
                                                    <Setter Property="Foreground" Value="{StaticResource DefaultRedBrush}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding FromAllTimeHigh, Converter={converters:IsGreaterConverter}, ConverterParameter=0}" Value="true">
                                                    <Setter Property="Foreground" Value="{StaticResource GreenBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <controls:PathButton Margin="5,0,0,0"
                                                     Glyph="{StaticResource square-poll-horizontal}"
                                                     GlyphFontSize="18"
                                                     IconCheckedColor="{StaticResource YellowColor}"
                                                     IconHoverColor="{StaticResource YellowColor}"
                                                     IsChecked="{Binding DataContext.ShowClosedPositions, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" />
                            </StackPanel>
                        </Border>

                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <!--<TextBlock Foreground="White" Text="{Binding DataContext.LayoutIntervals, RelativeSource={RelativeSource AncestorType=Window}}" />-->
                            <ListView Background="#6005080d" ItemsSource="{Binding DataContext.LayoutIntervals.View, RelativeSource={RelativeSource AncestorType=Window}}">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>

                                <ListView.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource ListViewItemStyle}" TargetType="ListViewItem">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListViewItem">
                                                    <Border Padding="5,2">
                                                        <ContentPresenter />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>

                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Cursor="Hand" Text="{Binding Model.Title}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Foreground" Value="#15ffffff" />

                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Foreground" Value="{StaticResource YellowBrush}" />
                                                        </Trigger>

                                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                            <Setter Property="Foreground" Value="{StaticResource YellowBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                            <Border Grid.Row="1"
                                    Padding="5,5,0,5"
                                    HorizontalAlignment="Left"
                                    Background="#6005080d">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>

                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto" />
                                            <RowDefinition Height="auto" />
                                        </Grid.RowDefinitions>

                                        <ItemsControl Margin="0,5" ItemsSource="{Binding PositionSizeMapping}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Foreground="#25ffffff"
                                                                   Style="{StaticResource {x:Type TextBlock}}"
                                                                   Text="{Binding Key}" />
                                                        <TextBlock Margin="10,0,0,0"
                                                                   Foreground="#25ffffff"
                                                                   Style="{StaticResource {x:Type TextBlock}}"
                                                                   Text="{Binding Value, StringFormat={}{0:N2}}" />
                                                    </StackPanel>

                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>

                                        <TextBlock Grid.Row="1"
                                                   Foreground="#25ffffff"
                                                   Text="{Binding ScaleSize, StringFormat={}{0} x}" />

                                    </Grid>

                                    <controls:PathButton Grid.Column="1"
                                                         Margin="10,10"
                                                         Padding="0"
                                                         VerticalAlignment="Top"
                                                         Command="{Binding DataContext.OpenPositionSize, RelativeSource={RelativeSource AncestorType=Window}}"
                                                         Glyph="{StaticResource pencil-glyph}"
                                                         IconHoverColor="{StaticResource YellowColor}"
                                                         IconMargin="0"
                                                         IsReadOnly="True" />
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                </Border>


            </Grid>

            <GridSplitter Grid.Row="1"
                          Height="3"
                          Margin="2,0,2,0"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center"
                          Background="{StaticResource 30_WhiteTransparentBrush}" />

            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" MinHeight="50" />
                </Grid.RowDefinitions>

                <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.Simulation, RelativeSource={RelativeSource AncestorType=Window}}" Value="true">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>

                    <TabControl Background="Transparent" DataContext="{Binding TradingBot.Strategy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                        <TabControl.Resources>
                            <Style TargetType="GroupBox">
                                <Setter Property="MaxHeight" Value="200" />
                                <Setter Property="Margin" Value="5" />
                            </Style>

                            <DataTemplate x:Key="OppsitePositions">

                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Style="{StaticResource PositionText}" Text="{Binding ShortId}" />
                                    <TextBlock Style="{StaticResource PositionText}" Text="{Binding FilledDate, StringFormat={}{0:dd.MM.yy HH:mm:ss}}" />
                                    <TextBlock Style="{StaticResource PositionText}" Text="{Binding Price}" />
                                    <TextBlock Style="{StaticResource PositionText}" Text="{Binding OriginalPositionSizeNative}" />
                                    <TextBlock Width="70"
                                               Style="{StaticResource PositionText}"
                                               Text="{Binding OriginalPositionSize, StringFormat={}{0:N2} $}" />

                                    <TextBlock Foreground="{StaticResource GreenBrush}"
                                               Style="{StaticResource PositionText}"
                                               Text="{Binding Profit, StringFormat={}{0:N3} $}" />
                                    <TextBlock Foreground="{StaticResource LightRedBrush}"
                                               Style="{StaticResource PositionText}"
                                               Text="{Binding Fees, StringFormat={}{0:N3} $}" />

                                </StackPanel>

                            </DataTemplate>

                            <DataTemplate x:Key="Trades">
                                <TextBlock Margin="10,2,0,5"
                                           Cursor="Hand"
                                           FontFamily="{StaticResource FontAwesome6Pro_Regular}"
                                           Foreground="#55ffffff"
                                           Style="{StaticResource PositionText}"
                                           Text="{StaticResource square-poll-horizontal}">
                                    <TextBlock.ToolTip>
                                        <Grid>
                                            <ItemsControl ItemTemplate="{StaticResource OppsitePositions}" ItemsSource="{Binding OpositPositions}" />
                                        </Grid>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </DataTemplate>
                        </TabControl.Resources>

                        <TabItem Header="Actual positions">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>


                                <DataGrid x:Name="ActualPositions"
                                          Grid.Row="1"
                                          AutoGenerateColumns="False"
                                          CanUserAddRows="False"
                                          CanUserDeleteRows="False"
                                          CanUserReorderColumns="False"
                                          IsReadOnly="True"
                                          ItemsSource="{Binding ActualPositions}"
                                          ScrollViewer.VerticalScrollBarVisibility="Auto">

                                    <DataGrid.Columns>
                                        <DataGridTextColumn Binding="{Binding ShortId}" Header="Id" />
                                        <DataGridTextColumn Binding="{Binding FilledDate, StringFormat={}{0:dd.MM HH:mm:ss}}" Header="Filled Date" />
                                        <DataGridTextColumn Binding="{Binding Price}" Header="Price" />
                                        <DataGridTextColumn Binding="{Binding OriginalPositionSizeNative}" Header="Size" />
                                        <DataGridTextColumn Binding="{Binding OriginalPositionSize, StringFormat={}{0:N2} $}" Header="Value" />

                                        <DataGridTextColumn Binding="{Binding ActualProfit, StringFormat={}{0:N3} $}" Header="Actual profit">
                                            <DataGridTextColumn.CellStyle>
                                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="DataGridCell">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ActualProfit, Converter={converters:IsLesserConverter}, ConverterParameter=0}" Value="true">
                                                            <Setter Property="Foreground" Value="{StaticResource DefaultRedBrush}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding ActualProfit, Converter={converters:IsGreaterConverter}, ConverterParameter=0}" Value="true">
                                                            <Setter Property="Foreground" Value="{StaticResource GreenBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>

                                        <DataGridTextColumn Binding="{Binding ExpectedProfit, StringFormat={}{0:N3} $}"
                                                            Foreground="{StaticResource YellowBrush3}"
                                                            Header="Expected profit">
                                            <DataGridTextColumn.CellStyle>
                                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="DataGridCell">
                                                    <Setter Property="HorizontalContentAlignment" Value="Left" />

                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>

                                        <DataGridTextColumn Binding="{Binding TargetPrice}" Header="Target Price" />

                                        <DataGridTemplateColumn CellTemplate="{StaticResource Trades}" Header="Trades" />
                                    </DataGrid.Columns>
                                </DataGrid>

                            </Grid>
                        </TabItem>


                        <TabItem Header="Completed Trades">
                            <DataGrid AutoGenerateColumns="False"
                                      CanUserAddRows="False"
                                      CanUserDeleteRows="False"
                                      CanUserReorderColumns="False"
                                      IsReadOnly="True"
                                      ItemsSource="{Binding AllCompletedPositions}"
                                      ScrollViewer.VerticalScrollBarVisibility="Auto">

                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding ShortId}" Header="Id" />
                                    <DataGridTextColumn Binding="{Binding FilledDate, StringFormat={}{0:dd.MM.yy HH:mm:ss}}" Header="Filled Date" />
                                    <DataGridTextColumn Binding="{Binding CompletedDate, StringFormat={}{0:dd.MM.yy HH:mm:ss}}" Header="Completed Date" />
                                    <DataGridTextColumn Binding="{Binding Price}" Header="Price" />
                                    <DataGridTextColumn Binding="{Binding OriginalPositionSizeNative}" Header="Size" />
                                    <DataGridTextColumn Binding="{Binding OriginalPositionSize, StringFormat={}{0:N2} $}" Header="Value" />

                                    <DataGridTextColumn Binding="{Binding TotalProfit, StringFormat={}{0:N3} $}"
                                                        Foreground="{StaticResource GreenBrush}"
                                                        Header="Total profit" />

                                    <DataGridTextColumn Binding="{Binding TotalFees, StringFormat={}{0:N3} $}"
                                                        Foreground="{StaticResource DefaultRedBrush}"
                                                        Header="Total Fees" />

                                    <DataGridTextColumn Binding="{Binding FinalProfit, StringFormat={}{0:N3} $}"
                                                        FontWeight="SemiBold"
                                                        Foreground="{StaticResource GreenBrush3}"
                                                        Header="Final profit" />

                                    <DataGridTextColumn Binding="{Binding TargetPrice}" Header="Target Price" />

                                    <DataGridTemplateColumn CellTemplate="{StaticResource Trades}" Header="Trades" />


                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>

                        <TabItem Header="Open Buy">
                            <DataGrid AutoGenerateColumns="False"
                                      CanUserAddRows="False"
                                      CanUserDeleteRows="False"
                                      CanUserReorderColumns="False"
                                      IsReadOnly="True"
                                      ItemsSource="{Binding OpenBuyPositions}"
                                      ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding ShortId}" Header="Id" />
                                    <DataGridTextColumn Binding="{Binding CreatedDate, StringFormat={}{0:dd.MM.yy HH:mm:ss}}" Header="Created Date" />
                                    <DataGridTextColumn Binding="{Binding Price}" Header="Price" />
                                    <DataGridTextColumn Binding="{Binding OriginalPositionSizeNative}" Header="Size" />
                                    <DataGridTextColumn Binding="{Binding OriginalPositionSize, StringFormat={}{0:N2} $}" Header="Value" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>

                        <TabItem Header="Open Sell">
                            <DataGrid AutoGenerateColumns="False"
                                      CanUserAddRows="False"
                                      CanUserDeleteRows="False"
                                      CanUserReorderColumns="False"
                                      IsReadOnly="True"
                                      ItemsSource="{Binding OpenSellPositions}"
                                      ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding ShortId}" Header="Id" />
                                    <DataGridTextColumn Binding="{Binding CreatedDate, StringFormat={}{0:dd.MM.yy HH:mm:ss}}" Header="Created Date" />
                                    <DataGridTextColumn Binding="{Binding Price}" Header="Price" />
                                    <DataGridTextColumn Binding="{Binding OriginalPositionSizeNative}" Header="Size" />
                                    <DataGridTextColumn Binding="{Binding OriginalPositionSize, StringFormat={}{0:N2} $}" Header="Value" />

                                    <DataGridTemplateColumn CellTemplate="{StaticResource Trades}" Header="Trades" />

                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>

                        <TabItem Header="Completed Sell">
                            <DataGrid AutoGenerateColumns="False"
                                      CanUserAddRows="False"
                                      CanUserDeleteRows="False"
                                      CanUserReorderColumns="False"
                                      IsReadOnly="True"
                                      ItemsSource="{Binding ClosedSellPositions}"
                                      ScrollViewer.VerticalScrollBarVisibility="Auto">

                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding ShortId}" Header="Id" />
                                    <DataGridTextColumn Binding="{Binding FilledDate, StringFormat={}{0:dd.MM.yy HH:mm:ss}}" Header="Filled Date" />
                                    <DataGridTextColumn Binding="{Binding Price}" Header="Price" />
                                    <DataGridTextColumn Binding="{Binding OriginalPositionSizeNative}" Header="Size" />
                                    <DataGridTextColumn Binding="{Binding OriginalPositionSize, StringFormat={}{0:N2} $}" Header="Value" />

                                    <DataGridTextColumn Binding="{Binding Fees, StringFormat={}{0:N3} $}"
                                                        Foreground="{StaticResource DefaultRedBrush}"
                                                        Header="Fees" />

                                    <DataGridTextColumn Binding="{Binding Profit, StringFormat={}{0:N3} $}"
                                                        Foreground="{StaticResource GreenBrush}"
                                                        Header="Profit" />
                                    <DataGridTemplateColumn CellTemplate="{StaticResource Trades}" Header="Trades" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>

                        <TabItem Header="Completed Buy">
                            <DataGrid AutoGenerateColumns="False"
                                      CanUserAddRows="False"
                                      CanUserDeleteRows="False"
                                      CanUserReorderColumns="False"
                                      IsReadOnly="True"
                                      ItemsSource="{Binding ClosedBuyPositions}"
                                      ScrollViewer.VerticalScrollBarVisibility="Auto">

                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding ShortId}" Header="Id" />
                                    <DataGridTextColumn Binding="{Binding FilledDate, StringFormat={}{0:dd.MM.yy HH:mm:ss}}" Header="Filled Date" />
                                    <DataGridTextColumn Binding="{Binding State}" Header="State" />
                                    <DataGridTextColumn Binding="{Binding Price}" Header="Price" />
                                    <DataGridTextColumn Binding="{Binding OriginalPositionSizeNative}" Header="Size" />
                                    <DataGridTextColumn Binding="{Binding OriginalPositionSize, StringFormat={}{0:N2} $}" Header="Value" />

                                    <DataGridTextColumn Binding="{Binding Fees, StringFormat={}{0:N3} $}"
                                                        Foreground="{StaticResource DefaultRedBrush}"
                                                        Header="Fees" />

                                    <DataGridTemplateColumn CellTemplate="{StaticResource Trades}" Header="Trades" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </TabItem>

                        <TabItem Header="Info">
                            <Grid VerticalAlignment="Top">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>

                                <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <UniformGrid Width="280"
                                                 HorizontalAlignment="Left"
                                                 Columns="2">
                                        <TextBlock Text="Total time" />
                                        <TextBlock Text="{Binding DataContext.TotalRunTime, StringFormat={}{0:dd\\:hh\\:mm\\:ss}, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" />
                                        <TextBlock Text="Active time" />
                                        <TextBlock Text="{Binding DataContext.ActiveTime, StringFormat={}{0:dd\\:hh\\:mm\\:ss}, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" />
                                        <TextBlock Text="Starting Budget" />
                                        <TextBlock Text="{Binding StartingBudget, StringFormat={}{0:N2} $}" />
                                        <TextBlock FontWeight="Bold" Text="Total Value" />
                                        <TextBlock FontSize="14"
                                                   FontWeight="Bold"
                                                   Text="{Binding TotalValue, StringFormat={}{0:N2} $}" />

                                        <TextBlock FontWeight="Bold" Text="Total Profit " />
                                        <TextBlock FontSize="14"
                                                   FontWeight="Bold"
                                                   Text="{Binding TotalProfit, StringFormat={}{0:N2} $}" />
                                        <TextBlock FontWeight="Bold" Text="Budget" />
                                        <TextBlock FontSize="14"
                                                   FontWeight="Bold"
                                                   Text="{Binding Budget, StringFormat={}{0:N2} $}" />
                                        <TextBlock Text="Avrage Buy Price " />
                                        <TextBlock Text="{Binding AvrageBuyPrice}" />


                                        <TextBlock Text="Total Native" />
                                        <TextBlock Text="{Binding TotalNativeAsset}" />
                                        <TextBlock Text="Total Native Value" />
                                        <TextBlock Text="{Binding TotalNativeAssetValue, StringFormat={}{0:N2} $}" />

                                        <TextBlock Text="Closed buy trades" />
                                        <TextBlock Text="{Binding ClosedBuyPositions.Count, StringFormat={}{0}}" />
                                        <TextBlock Text="Closed sell trades" />
                                        <TextBlock Text="{Binding ClosedSellPositions.Count, StringFormat={}{0}}" />

                                        <TextBlock Text="Total Sell" />
                                        <TextBlock Text="{Binding TotalSell}" />
                                        <TextBlock Text="Total Buy" />
                                        <TextBlock Text="{Binding TotalBuy}" />

                                        <TextBlock Text="Scale" />
                                        <TextBlock Text="{Binding ScaleSize}" />
                                    </UniformGrid>
                                </ScrollViewer>

                                <ItemsControl Grid.Row="1"
                                              Margin="0,5"
                                              ItemsSource="{Binding PositionSizeMapping}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Style="{StaticResource {x:Type TextBlock}}" Text="{Binding Key}" />
                                                <TextBlock Margin="10,0,0,0"
                                                           Style="{StaticResource {x:Type TextBlock}}"
                                                           Text="{Binding Value, StringFormat={}{0:N2}}" />
                                            </StackPanel>

                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <StackPanel Grid.Row="2" Orientation="Vertical">
                                    <TextBlock Foreground="#36ffffff" Text="{Binding DataContext.BuildVersion, RelativeSource={RelativeSource AncestorType=Window}}" />
                                </StackPanel>
                            </Grid>
                        </TabItem>
                    </TabControl>
                </Border>

                <GridSplitter Grid.Row="1"
                              Height="3"
                              Margin="2,0,2,0"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Center"
                              Background="{StaticResource 30_WhiteTransparentBrush}" />


                <DataGrid x:Name="Loggs"
                          Grid.Row="2"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding ConsoleCollectionLogger.Logs}">
                    <DataGrid.CellStyle>
                        <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="DataGridCell">
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MessageType}" Value="{x:Static logger:MessageType.Error}">
                                    <Setter Property="Foreground" Value="{StaticResource DefaultRedBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MessageType}" Value="{x:Static logger:MessageType.Warning}">
                                    <Setter Property="Foreground" Value="{StaticResource YellowBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MessageType}" Value="{x:Static logger:MessageType.Success}">
                                    <Setter Property="Foreground" Value="{StaticResource GreenBrush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding MessageType}" Value="{x:Static logger:MessageType.Success2}">
                                    <Setter Property="Foreground" Value="{StaticResource MagentaBrush}" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding MessageType}" Value="{x:Static logger:MessageType.Inform2}">
                                    <Setter Property="Foreground" Value="{StaticResource BlueBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Time, StringFormat={}{0:dd.MM.yy HH:mm:ss}}" Header="Time" />
                        <DataGridTextColumn Binding="{Binding MessageType}" Header="Type" />
                        <DataGridTextColumn Binding="{Binding Message}" Header="Message" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>
    </Grid>
</Window>
