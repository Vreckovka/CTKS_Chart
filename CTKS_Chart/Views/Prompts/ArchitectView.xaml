<UserControl
  x:Class="CTKS_Chart.Views.Prompts.ArchitectView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:controls="clr-namespace:CTKS_Chart.Views.Controls"
  xmlns:controls1="clr-namespace:VCore.WPF.Controls;assembly=VCore.WPF"
  xmlns:converters="clr-namespace:CTKS_Chart.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:CTKS_Chart.Views.Prompts"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d">
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="250" />
      <ColumnDefinition />
    </Grid.ColumnDefinitions>

    <Grid.RowDefinitions>
      <RowDefinition Height="auto" />
      <RowDefinition />
    </Grid.RowDefinitions>

    <Grid Grid.RowSpan="2" Grid.Column="0">
      <Grid.RowDefinitions>
        <RowDefinition Height="auto" />
        <RowDefinition />
      </Grid.RowDefinitions>

      <StackPanel>
        <TextBox Text="{Binding Epsilon, Mode=TwoWay}" />

        <StackPanel Margin="5" Orientation="Horizontal">
          <Button
            Margin="5,0"
            Command="{Binding SetAllLinesVisibility}"
            CommandParameter="true">
            Show all lines
          </Button>
          <Button
            Margin="5,0"
            Command="{Binding SetAllLinesVisibility}"
            CommandParameter="false">
            Hide all lines
          </Button>
        </StackPanel>

      </StackPanel>


      <ListView
        Grid.Row="1"
        ItemsSource="{Binding Lines}"
        Style="{StaticResource {x:Type ListView}}">
        <ListView.ItemTemplate>
          <DataTemplate>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
              </Grid.ColumnDefinitions>

              <StackPanel DataContext="{Binding Model}" Orientation="Horizontal">
                <StackPanel Margin="0,5" Orientation="Horizontal">
                  <TextBlock Margin="5,0" Text="{Binding LineType}" />
                  <TextBlock Text="{Binding TimeFrame}" />
                </StackPanel>

                <!--<StackPanel
                  Margin="0,5"
                  DataContext="{Binding FirstPoint}"
                  Orientation="Horizontal">
                  <TextBlock Margin="5,0" Text="{Binding Price}" />
                  <TextBlock Text="{Binding UnixTime}" />
                </StackPanel>


                <StackPanel
                  Margin="0,5"
                  DataContext="{Binding SecondPoint}"
                  Orientation="Horizontal">
                  <TextBlock Margin="5,0" Text="{Binding Price}" />
                  <TextBlock Text="{Binding UnixTime}" />
                </StackPanel>-->


              </StackPanel>

              <StackPanel
                Grid.Column="1"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
                <controls1:PathButton
                  Glyph=""
                  IconCheckedColor="{StaticResource GreenColor}"
                  IsChecked="{Binding IsVisible}" />
              </StackPanel>
            </Grid>
          </DataTemplate>
        </ListView.ItemTemplate>
      </ListView>
    </Grid>


    <ItemsControl
      Grid.Row="0"
      Grid.Column="1"
      ItemsSource="{Binding Layouts}">
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
      <ItemsControl.ItemTemplate>
        <DataTemplate>
          <Border>
            <Button Command="{Binding DataContext.ShowCanvas, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}">
              <TextBlock FontSize="15" Text="{Binding Title}" />

              <Button.Style>
                <Style TargetType="Button">
                  <Setter Property="Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                          Margin="{TemplateBinding Margin}"
                          Padding="{TemplateBinding Padding}"
                          Background="{TemplateBinding Background}">
                          <ContentPresenter />
                        </Border>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>

                  <Setter Property="Background" Value="#15ffffff" />

                  <Setter Property="Padding" Value="15,5" />
                  <Setter Property="Margin" Value="0,0,5,0" />
                  <Setter Property="FontWeight" Value="SemiBold" />
                  <Setter Property="BorderThickness" Value="0" />
                  <Setter Property="Foreground" Value="{StaticResource DefaultWhiteBrush}" />

                  <Style.Triggers>
                    <DataTrigger Binding="{Binding IsOutDated}" Value="True">
                      <Setter Property="Background" Value="#f25e5e" />
                    </DataTrigger>

                    <Trigger Property="IsMouseOver" Value="True">
                      <Setter Property="Background" Value="#35ffffff" />
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </Button.Style>
            </Button>
          </Border>
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ItemsControl>

    <Grid
      Grid.Row="1"
      Grid.Column="1"
      Background="#ff05080d">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="auto" />
        <ColumnDefinition />
        <ColumnDefinition Width="auto" />
      </Grid.ColumnDefinitions>

      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="auto" />
      </Grid.RowDefinitions>

      <Border
        Width="50"
        Margin="0,0,0,0"
        Padding="0,15,0,0"
        HorizontalAlignment="Left"
        Panel.ZIndex="100"
        Background="#45000000">
        <Grid Margin="0,90,0,0">
          <StackPanel Orientation="Vertical">
            <controls1:PathButton
              Margin="0,0,0,10"
              HorizontalAlignment="Center"
              VerticalAlignment="Top"
              Glyph=""
              GlyphFontSize="25"
              IconCheckedColor="{StaticResource YellowColor}"
              IconHeight="auto"
              IconMargin="0"
              IconWidth="auto"
              IsChecked="{Binding ElementName=Overlay, Path=MeasureTool.IsEnabled, Mode=TwoWay}"
              ToolTip="Measure" />

            <StackPanel DataContext="{Binding DrawingViewModel.DrawingSettings}" Orientation="Vertical">
              <controls1:PathButton
                Margin="0,10"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Glyph=""
                GlyphFontSize="25"
                IconCheckedColor="{StaticResource YellowColor}"
                IconHeight="auto"
                IconMargin="0"
                IconWidth="auto"
                IsChecked="{Binding ShowIntersections, Mode=TwoWay}"
                ToolTip="Show intersections" />

              <controls1:PathButton
                Margin="0,10"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Glyph=""
                GlyphFontSize="25"
                IconCheckedColor="{StaticResource YellowColor}"
                IconHeight="auto"
                IconMargin="0"
                IconWidth="auto"
                IsChecked="{Binding ShowClusters, Mode=TwoWay}"
                ToolTip="Show clusters" />
            </StackPanel>

          </StackPanel>

        </Grid>
      </Border>

      <controls:Chart
        x:Name="Chart"
        Grid.Row="0"
        Grid.Column="1"
        AssetPriceRound="{Binding TradingBot.Asset.PriceRound}"
        ChartContent="{Binding ChartImage}"
        ChartHeight="{Binding CanvasHeight}"
        ChartWidth="{Binding CanvasWidth}"
        MaxXValue="{Binding MaxUnix, Mode=TwoWay}"
        MaxYValue="{Binding MaxValue, Mode=TwoWay}"
        MinXValue="{Binding MinUnix, Mode=TwoWay}"
        MinYValue="{Binding MinValue, Mode=TwoWay}"
        Overlay="{Binding ElementName=Overlay}" />

      <controls:Overlay
        x:Name="Overlay"
        Grid.RowSpan="2"
        Grid.Column="1"
        Grid.ColumnSpan="2"
        Chart="{Binding ElementName=Chart}"
        HorizontalRuler="{Binding ElementName=HorizontalRuler}"
        VerticalRuler="{Binding ElementName=VerticalRuler}" />

      <controls:VerticalRuler
        x:Name="VerticalRuler"
        Grid.Row="0"
        Grid.Column="2"
        MinWidth="25"
        HorizontalAlignment="Right"
        VerticalAlignment="Center"
        AssetPriceRound="{Binding DrawingViewModel.TradingBot.Asset.PriceRound}"
        ChartContent="{Binding ChartImage}"
        MaxValue="{Binding MaxValue, Mode=TwoWay}"
        MinValue="{Binding MinValue, Mode=TwoWay}"
        Size="{Binding CanvasHeight}"
        ValuesToRender="{Binding RenderedIntersections}" />

      <controls:HorizontalRuler
        x:Name="HorizontalRuler"
        Grid.Row="1"
        Grid.Column="1"
        Height="22"
        HorizontalAlignment="Center"
        VerticalAlignment="Bottom"
        ChartContent="{Binding ChartImage}"
        MaxValue="{Binding MaxUnix, Mode=TwoWay}"
        MinValue="{Binding MinUnix, Mode=TwoWay}"
        Size="{Binding CanvasWidth}" />


      <controls1:PathButton
        Grid.Row="1"
        Margin="5,5"
        HorizontalAlignment="Left"
        VerticalAlignment="Bottom"
        Command="{Binding DrawingViewModel.ResetChart}"
        Glyph=""
        IconMargin="0"
        IsReadOnly="True"
        Style="{StaticResource FontAwesomeGlyphStyle}"
        ToolTip="Reset chart" />
    </Grid>

  </Grid>
</UserControl>
